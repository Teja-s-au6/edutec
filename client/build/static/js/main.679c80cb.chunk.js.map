{"version":3,"sources":["components/Results.jsx","App.js","reportWebVitals.js","index.js"],"names":["Results","results","console","log","style","border","map","res","rollNumber","result","App","state","rollNumbers","disable","handleChange","e","setState","target","name","value","handleSubmit","a","alert","data1","split","headers","axios","post","data","type","onChange","this","onClick","disabled","length","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAyCeA,EAvCC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAElB,OADAC,QAAQC,IAAIF,GAEX,gCACC,iCACC,gDAEQ,iCACT,8BACC,wBAAOG,MAAO,CAAEC,OAAQ,mBAAxB,UACC,gCACC,+BACC,6CACA,8CAGDJ,EACAA,EAAQK,KAAI,SAACC,GAAD,OACX,gCACC,+BACC,6BAAMA,EAAIC,aACV,6BAAMD,EAAIE,aAHAF,EAAIC,eAQjB,gCACsB,6BACI,oECSjBE,E,4MAnCdC,MAAQ,CACPC,YAAa,GACbX,QAAS,GACTY,SAAS,G,EAGVC,aAAe,SAACC,GACf,EAAKC,SAAL,eAAiBD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAG3CC,a,sBAAe,kCAAAC,EAAA,yDACiB,KAA3B,EAAKV,MAAMC,YADD,gBAEbU,MAAM,wBAFO,8BAIPC,EAAQ,EAAKZ,MAAMC,YAAYY,MAAM,KACrCC,EAAU,CAAE,eAAgB,oBALrB,SAMUC,IAAMC,KAAK,6CAA8CJ,EAAO,CAAEE,QAASA,IANrF,gBAMLG,EANK,EAMLA,KACR,EAAKZ,SAAS,CAAEf,QAAS2B,EAAK3B,UAPjB,QASd,EAAKe,SAAS,CAAEH,SAAS,IATX,4C,uDAad,OACC,8BACC,mCACC,uBAAOgB,KAAK,OAAOX,KAAK,cAAcY,SAAUC,KAAKjB,eACrD,wBAAQkB,QAASD,KAAKX,aAAca,SAAUF,KAAKpB,MAAME,QAAzD,qBAC+B,IAA9BkB,KAAKpB,MAAMV,QAAQiC,OAAe,2EAAqD,cAAC,EAAD,CAASjC,QAAS8B,KAAKpB,MAAMV,mB,GA7BxGkC,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.679c80cb.chunk.js","sourcesContent":["import React from 'react';\n\nconst Results = ({ results }) => {\n\tconsole.log(results);\n\treturn (\n\t\t<div>\n\t\t\t<center>\n\t\t\t\t<h1>Results List</h1>\n\t\t\t</center>\n            <center>\n\t\t\t<div>\n\t\t\t\t<table style={{ border: '1px solid black'}}>\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>RollNumbers</th>\n\t\t\t\t\t\t\t<th>Results</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t{results ? (\n\t\t\t\t\t\tresults.map((res) => (\n\t\t\t\t\t\t\t<tbody key={res.rollNumber}>\n\t\t\t\t\t\t\t\t<tr >\n\t\t\t\t\t\t\t\t\t<td >{res.rollNumber}</td>\n\t\t\t\t\t\t\t\t\t<td >{res.result}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t))\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<tfoot>\n                            <tr>\n                                <td>Waiting for Results</td>\n                            </tr>\n                        </tfoot>\n\t\t\t\t\t)}\n\t\t\t\t</table>\n\t\t\t</div>\n            </center>\n\t\t</div>\n\t);\n};\n\nexport default Results;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Results from './components/Results';\nclass App extends Component {\n\tstate = {\n\t\trollNumbers: '',\n\t\tresults: [],\n\t\tdisable: false\n\t};\n\n\thandleChange = (e) => {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t};\n\n\thandleSubmit = async () => {\n\t\tif (this.state.rollNumbers === '') {\n\t\t\talert('Fill the input first');\n\t\t} else {\n\t\t\tconst data1 = this.state.rollNumbers.split(',');\n\t\t\tconst headers = { 'Content-Type': 'application/json' };\n\t\t\tconst { data } = await axios.post('https://eduteclog.herokuapp.com/getresults', data1, { headers: headers });\n\t\t\tthis.setState({ results: data.results });\n\t\t}\n\t\tthis.setState({ disable: true})\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<center>\n\t\t\t\t\t<input type=\"text\" name=\"rollNumbers\" onChange={this.handleChange} />\n\t\t\t\t\t<button onClick={this.handleSubmit} disabled={this.state.disable}> Submit</button>\n\t\t\t\t\t{this.state.results.length === 0 ? <h1>Fill the input , click on submit and wait</h1> : <Results results={this.state.results} />}\n\t\t\t\t</center>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}